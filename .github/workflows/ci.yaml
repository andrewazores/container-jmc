name: CI build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  get-core-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: query-pom
      # Query POM for core version and save as output parameter
      run: |
        CORE_VERSION="$(mvn help:evaluate -Dexpression=io.cryostat.core.version -q -DforceStdout)"
        echo "::set-output name=core-version::v$CORE_VERSION"
    outputs:
      core-version: ${{ steps.query-pom.outputs.core-version }}

  build-deps:
    runs-on: ubuntu-latest
    needs: [get-core-version]
    steps:
    - uses: actions/checkout@v2
      with:
        repository: cryostatio/cryostat-core
        ref: ${{ needs.get-core-version.outputs.core-version }}
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - run: mvn -B -U -DskipTests=true clean install
    - uses: actions/upload-artifact@v2
      with:
        name: container-jfr-core
        path: /home/runner/.m2/repository/io/cryostat/cryostat-core/
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  build:
    runs-on: ubuntu-latest
    needs: [build-deps]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - uses: actions/download-artifact@v2
      with:
        name: container-jfr-core
        path: /home/runner/.m2/repository/io/cryostat/cryostat-core/
    - run: git submodule init
    - run: git submodule update
    - run: mvn -B -U clean verify
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save
